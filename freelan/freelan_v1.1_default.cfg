# This is the FreeLAN configuration file
#

[server]

# Whether to use the server mechanism.
#
# The server mechanism allow a host to delegate some parameters of its
# configuration to an external server.
#
# If this mode is enabled, any specified certificate or private for the user
# will be discarded and a new ones, generated and signed by the server will be
# used instead.
#
# The server has to be reachable on startup for freelan to work. If the server
# becomes unreachable after the network has been established, all existing
# connections will keep going.
#
# Possible values: yes, no
#
# Default: no
enabled=no

# The server host to synchronize with.
#
# This can be a hostname or a numeric IPv4 or IPv6 address with or without a
# TCP port specifier.
# If no TCP port is specified, 443 (HTTPS) is assumed.
#
# This connection is *ALWAYS* performed using HTTPS, whatever the TCP port
# specified.
#
# Example values: hostname, some.other.host.org:443, 10.0.0.1:443
# Default: <none>
#host=

# The HTTPS proxy to use, if any.
#
# This can be a hostname or a numeric IPv4 or IPv6 address with or without a
# TCP port specifier.
# If no TCP port is specified, 1080 is assumed.
#
# If no HTTPS proxy is specified, freelan will take the system defaults, as
# specified with the http_proxy, https_proxy, all_proxy environment variables.
#
# Setting this value to an empty string disables the proxy mechanism.

# Example values: hostname, some.other.host.org:8080, 10.0.0.1:8080
# Default: <none>
#https_proxy=

# The username.
#
# The identifier to use to connect on the specified server host.
#
# Default: <none>
#username=

# The password.
#
# The password associated to the specified username.
#
# If no password is specified, freelan will check for the existence of a
# FREELAN_SERVER_PASSWORD environment variable instead.
#
# Default: <value of the FREELAN_SERVER_PASSWORD environment variable>
#password=

# The network.
#
# The network to join on the specified server.
#
# If no network is specified, freelan will check for the existence of a
# FREELAN_SERVER_NETWORK environment variable instead.
#
# Default: <value of the FREELAN_SERVER_NETWORK environment variable>
#network=

# The endpoints to announce to the other hosts.
#
# Those endpoints will be send, as they are, to other hosts wanting to reach
# us. You may specify IP adresses or host names.
#
# There are also some special values:
#
# - 0.0.0.0 as a host part will be replaced by the server with your known public
# IPv4 address. If you are connected to the server with an IPv6 address, this
# entry will be ignored.
# - :: as a host part will be replaced by the server with your known public IPv6
# address. If you are connected to the server with an IPv4 address, this entry
# will be ignored.
# - If no port number is specified, then the port specified in the `listen_on`
# directive will be used.
#
# You may repeat the public_endpoint option to add several endpoints.
#
# This option is useful when you host freelan behind a NAT firewall with
# redirections. It allows to inform the others peers of your public IP address.
#
# Default: 0.0.0.0, ::
public_endpoint=0.0.0.0
public_endpoint=::

# The user agent.
#
# Set this option to change the user agent of the freelan HTTP client.
#
# Changing the user agent might be useful in situations where a ill-configured
# proxy put constraints on some user agents.
#
# Setting this option to an empty value will make freelan use the default
# libcurl user agent.
#
# Not setting this option will make freelan use its default user agent.
#
# Default: <none>
#user_agent=

# The protocol.
#
# The protocol to use to contact the server.
#
# You probably should *NEVER* change this option !
#
# *** SETTING ANOTHER VALUE THAN "https" COMPLETELY DISABLES SECURITY ! ***
#
# Use this for development purposes only ! You have been warned.
#
# Possible values: http, https
#
# Default: https
#protocol=https

# The CA info file.
#
# If set, specifies a file holding one or more certificates to verify the
# freelan server with.
#
# This option is passed as-is to libcurl
# (http://curl.haxx.se/libcurl/c/curl_easy_setopt.html#CURLOPTCAINFO).
#
# If the option is not set, or is set to an empty value, the system default
# value is taken.
#
# This option is *ONLY* used when verifying the certificate of the freelan
# server.
#
# Default: <none>
#ca_info_file=

# Disable peer verification.
#
# Enabling this option disable peer verification, making the connection A LOT
# LESS SECURE.
#
# Use this for configuration testing purposes only !
#
# Possible values: yes, no
#
# This option is *ONLY* used when verifying the certificate of the freelan
# server.
#
# Default: no
#disable_peer_verification=no

# Disable host verification.
#
# Enabling this option disable host verification, making the connection less
# secure.
#
# Host verification ensures that the host specified in the server's certificate
# matches the host to which the request was sent in the first place.
#
# Disabling it allows trivial man-in-the-middle attacks.
#
# Use this for configuration testing purposes only !
#
# Possible values: yes, no
#
# This option is *ONLY* used when verifying the certificate of the freelan
# server.
#
# Default: no
#disable_host_verification=no

[fscp]

# The protocol to use for hostname resolution.
#
# Possible values are: ipv4, ipv6
hostname_resolution_protocol=ipv4

# The endpoint to listen on.
#
# The endpoint can be in both numeric and hostname format, and must always
# contain a port specification.
#
# Hostnames are resolved using the method specified by
# network.hostname_resolution_protocol.
#
# Using a numeric value is recommended.
#
# Example values: 0.0.0.0:12000, [::]:12000, localhost:12000, 10.0.0.1:12000
# Default: 0.0.0.0:12000
listen_on=0.0.0.0:12000

# The timeout for hello messages.
#
# The time to wait for hello responses, in milliseconds.
#
# Default: 3000
hello_timeout=3000

# The contact list.
#
# The list of hosts to connect to.
#
# You may repeat the contact option to add several hosts.
#
# Examples: 192.168.0.1, [fe80::1]:12000, hostname:1234, some.other.host.org:1234
# Default: <none>
#contact=192.168.0.1:12000

# Whether to accept contact requests.
#
# If set to yes, freelan will answer to contact requests sent by other hosts.
#
# It is recommended that this option is set to enhance connectivity.
#
# Possible values: yes, no
#
# Default: yes
accept_contact_requests=yes

# Whether to accept contacts.
#
# If set to yes, freelan will accept contacts sent by other hosts and will try
# to establish a session with those contacts, just as if there was a "contact="
# option for them.
#
# It is recommended that this option is set to enhance connectivity.
#
# To control which hosts are contacted automatically, see the "never_contact"
# option.
#
# Possible values: yes, no
#
# Default: yes
accept_contacts=yes

# Specify certificates for which a dynamic host search must be performed.
#
# The freelan daemon will periodically send a contact request to his neighbors
# for each of these certificates.
#
# This option is only useful if "accept_contacts" is set.
#
# You may repeat the dynamic_contact option to add several dynamic hosts.
#
# Default: <none>
#dynamic_contact_file=

# Specify IP networks that should never be automatically contacted.
#
# If the freelan deamon receives a contact which belongs to one of the
# specified "never_contact" networks, it will not try to establish a session
# with it.
#
# You may repeat the never_contact option to add several IP networks.
#
# Default: <none>
#never_contact=9.0.0.0/24
#never_contact=2aa1::1/8
#never_contact=1.2.3.4

# Specify the cipher algorithms to use for the sessions.
#
# The algorithms must be declared in order of preference.
#
# If another host doesn't support any of the specified algorithms, no session
# can be established with it.
#
# You may repeat the cipher_capability option to add several supported
# algorithms.
#
# Available values:
# * aes256-gcm
#
# Default: aes256-gcm
cipher_capability=aes256-gcm

[tap_adapter]

# Whether to use the tap adapter.
#
# Possible values: yes, no
#
# Default: yes
enabled=yes

# The name of the tap adapter to use or create.
#
# On Windows, the GUID of an existing tap adapter is expected. It may be found
# in the registry:
#
# HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkCards
#
# If no name or an empty name is provided, the first available adapter will be
# used.
#
# On UNIX, it is the name of the tap adapter to create. Depending on your
# system, some names might be restricted, and something in the form of tapX
# (where X is a positive number) is recommended.
#
# If no name or an empty name is provided, a tap adapter will be created with
# an available name.
#
# Should you need to know it, you may get that name by specifying an up_script.
#
# Default: <empty>
#name=

# The Maximum Transmission Unit (MTU) for the tap adapter.
#
# This value is used to set the MTU on the tap adapter.
#
# You may specify anything but note that specifying a too small or too big
# value can cause performance issues or kernel crashes.
#
# Use this at your own risk.
#
# Available values:
# * auto: The value for the MTU is computed automatically.
# * system: The system default value is taken (usually 1500).
# * Any strictly positive numeric value (eg. 1500).
#
# Default: auto
#mtu=auto

# The tap adapter IPv4 address and prefix length to use.
#
# The network address must be in numeric format with a netmask suffix.
#
# On Windows, the prefix length is ignored (but still must be specified) and
# the netmask is determined according to the IPv4 class. It is recommended that
# you set the network.enable_dhcp_proxy option.
#
# You may specify an empty value.
#
# Default: 9.0.0.1/24
ipv4_address_prefix_length=9.0.0.1/24

# The tap adapter IPv6 address and prefix length to use.
#
# The network address must be in numeric format with a netmask suffix.
#
# You may specify an empty value.
#
# Default: 2aa1::1/8
ipv6_address_prefix_length=2aa1::1/8

# Whether to enable the ARP proxy.
#
# When the ARP proxy is enabled, all ARP requests are silently rerouted to an
# internal ARP server that always replies positively. Remote hosts never
# receive any ARP request.
#
# Warning: Setting this parameter can lead to connectivity issues. It is
# provided solely for debugging and testing purposes.
#
# Default: no
arp_proxy_enabled=no

# The ARP proxy fake ethernet address.
#
# If tap_adapter.arp_proxy_enabled is not set, this option is ignored.
#
# Default: 00:aa:bb:cc:dd:ee
arp_proxy_fake_ethernet_address=00:aa:bb:cc:dd:ee

# Whether to enable the DHCP proxy.
#
# When the DHCP proxy is enabled, all BOOTP/DHCP requests are silently rerouted
# to an internal DHCP server. Remote hosts never receive any DHCP request.
#
# The TAP interface must be ready to issue DHCP requests if this option is set.
#
# The use of this option is recommended on Windows for IPv4 addresses. On
# Windows, if this option is set, no attempt to directly set the IPv4 address
# will be made.
#
# Default: yes
dhcp_proxy_enabled=yes

# The DHCP proxy server IPv4 address and prefix length to use.
#
# This value should be different from
# network.ipv4_address_prefix_length but within the same network.
#
# Note that while this option expects a valid host IPv4 address, providing a
# network address also works on both Windows and POSIX operating systems.
#
# Default: 9.0.0.0/24
dhcp_server_ipv4_address_prefix_length=9.0.0.0/24

# The DHCP proxy server IPv6 address and prefix length to use.
#
# This value should be different from
# network.ipv6_address_prefix_length but within the same network.
#
# Note that while this option expects a valid host IPv6 address, providing a
# network address also works on both Windows and POSIX operating systems.
#
# Default: 2aa1::/8
dhcp_server_ipv6_address_prefix_length=2aa1::/8

# The script to call when the tap adapter is up and running.
#
# The script is called with the tap adapter's name as it's first argument.
#
# The script exit status is ignored.
#
# Default: <empty>
#up_script=

# The script to call when the tap adapter is set down.
#
# The script is called with the tap adapter's name as it's first argument.
#
# The script exit status is ignored.
#
# Default: <empty>
#down_script=

[switch]

# The routing method for messages.
#
# Possible values: switch, hub
#
# - switch: Act like a switch. Messages are only sent to the right host when its
# address is known.
# - hub: Send all messages to everyone on the network. The memory footprint is
# slightly reduced at the cost of much higher bandwitdh usage. Recommended for
# 1-to-1 networks only.
#
# Warning: At any time, if the memory consumption is too high, the
# routing_method may be temporarily switched from "switch" to "hub" to prevent
# DoS attacks.
#
# Default: switch
routing_method=switch

# Whether to enable the relay mode.
#
# Possible values: no, yes
#
# - no: Not relaying frames from one remote host to the other.
# - yes: Transmits frames from one host to the other.
#
# If you enable relay mode, it is recommended that routing_method is set to
# switch.
#
# Default: no
relay_mode_enabled=no

[security]

# The X509 certificate file to use for signing.
#
# Unless server.enabled is set to "yes", this parameter is mandatory.
#
# Default: <none>
#signature_certificate_file=

# The private key file to use for signing.
#
# Unless server.enabled is set to "yes", this parameter is mandatory.
#
# This private key must match with the specified signing certificate file.
#
# Default: <none>
#signature_private_key_file=

# The X509 certificate file to use for encryption.
#
# If none is specified, the signature certificate is used instead.
#
# The encryption certificate MUST have the same subject as the signature
# certificate.
#
# Default: <none>
#encryption_certificate_file=

# The private key file to use for encryption.
#
# This private key must match with the specified encryption certificate file.
#
# If none is specified, the signature private key is used instead.
#
# Default: <none>
#encryption_private_key_file=

# The certificate validation method to use.
#
# Possible values are: default, none
#
# - default: Matches any presented certificate against the specified
# certificate authorities.
# - none: Disable certificate validation.
#
# Warning: Think twice before setting "none" here, as this completely disables
# certificate validation. If you choose to do so, ensure that you have a robust
# certificate validation script set as certificate_validation_script.
#
# Default: default
certificate_validation_method=default

# The certificate validation script to call.
#
# Every time a external certificate is received and accepted by the specified
# certificate_validation_method, the specified script is called with a X509
# certificate filename as its first argument.
#
# If the script exit status is zero, the certificate is accepted.
# If the script exit status is non-zero, the certificate is rejected.
#
# The certificate validation script is called even if
# certificate_validation_method is set to "none".
#
# Specify an empty validation script path to disable script validation.
#
# Default: <empty>
#certificate_validation_script=

# The authority certificates.
#
# You may repeat the authority_certificate_file option to specify several
# authority certificates.
#
# Default: <none>
#authority_certificate_file=

# The certificate revocation validation method to use.
#
# Possible values are: last, all, none
#
# - last: Only the last certificate of the certification chain is checked for
# revocation.
# - all: All certificates from the certification chain are checked for
# revocation.
# - none: Certificates are not checked for revocation.
#
# Default: none
certificate_revocation_validation_method=none

# The certificate revocation lists.
#
# You may repeat the certificate_revocation_list_file option to specify several
# certificate revocation lists.
#
# Default: <none>
#certificate_revocation_list_file=
